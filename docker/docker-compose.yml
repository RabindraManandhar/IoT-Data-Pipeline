services:
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # KRaft settings
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker, controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      # Listeners
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      # Topic configurations
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 
      # Enable KRaft mode
      CLUSTER_ID: ${CLUSTER_ID}
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
    
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      SERVER_SERVLET_CONTEXT_PATH: /
    depends_on:
      - kafka
    networks:
      - kafka-net

  kafka-producer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.producer
    container_name: kafka-producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: iot-sensor-data
      IOT_NUM_DEVICES: 8
      IOT_DATA_INTERVAL_SEC: 1.0
      PYTHONUNBUFFERED: 1
    depends_on:
      - kafka
    networks:
      - kafka-net

  kafka-consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.consumer
    container_name: kafka-consumer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_NAME: iot-sensor-data
      KAFKA_CONSUMER_GROUP_ID: iot-data-consumer
      KAFKA_AUTO_OFFSET_RESET: earliest
      PYTHONUNBUFFERED: 1
    depends_on:
      - kafka
      - kafka-producer
    networks:
      - kafka-net

volumes:
  kafka_data:
    driver: local

networks:
  kafka-net:
    name: docker_kafka-net